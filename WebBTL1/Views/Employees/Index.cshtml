@using WebBTL1.Pagination;
@using WebBTL1.ViewModels;
@model PaginatedList<EmployeeViewModel>

@{
    ViewData["Title"] = "Index";
}
<a asp-action="Create" class="btn btn-primary">Create New
    @*<a >Create New</a>*@
</a>

<table class="table">
    <thead>
        <tr>
            <th>
                Name
            </th>
            <th>
                Dob
            </th>
            <th>
                Age
            </th>
            <th>
                Ethnic
            </th>
            <th>
                Job
            </th>
            <th>
                IdentityNumber
            </th>
            <th>
                PhoneNumber
            </th>
            <th>
                Province
            </th>
            <th>
                District
            </th>
            <th>
                Commune
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model) {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Dob)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Age)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Ethnic)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Job)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IdentityNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PhoneNumber)
                </td>
                <td>
                    @if (item.Province == null)
                    {
                        <text>Process</text>
                    } else
                    {
                        @Html.DisplayFor(modelItem => item.Province)
                    }
                </td>
                <td>
                    @if (item.District == null)
                    {
                        <text>Process</text>
                    } else
                    {
                        @Html.DisplayFor(modelItem => item.District)
                    }
                </td>
                <td>
                    @if (item.Commune == null)
                    {
                        <text>Process</text>
                    } else
                    {
                        @Html.DisplayFor(modelItem => item.Commune)
                    }
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
<br />

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
<a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex-1)" class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex+1)" class="btn btn-default @nextDisabled">
    Next
</a>
<br />

<div>
    <!-- Import Excel button -->
    <form asp-controller="Employees" asp-action="Import" method="post" enctype="multipart/form-data">
        <input type="file" name="file" />
        <button type="submit">Import Excel</button>
    </form>

    <!-- Export Excel button -->
    <form asp-controller="Employees" asp-action="Export" method="post">
        <button type="submit">Export Excel</button>
    </form>
</div>
