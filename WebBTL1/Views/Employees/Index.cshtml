@using WebBTL1.Pagination;
@using WebBTL1.ViewModels;
@model PaginatedList<EmployeeViewModel>

@{
    ViewData["Title"] = "Index";
}

<div class="row">
    <div class="col-md-9">
        <a asp-action="Create" class="btn btn-primary">Create New</a>
    </div>
    <div class="col-md-3">
        <form asp-controller="Employees" asp-action="Import" method="post" enctype="multipart/form-data" class="d-flex">
            <input type="file" name="file" class="form-control-file" />
            <button class="btn btn-primary" type="submit">Submit</button>
        </form>
    </div>
</div>
    

<table class="table">
    <thead>
        <tr>
            <th>
                Name
            </th>
            <th>
                Dob
            </th>
            <th>
                Age
            </th>
            <th>
                Ethnic
            </th>
            <th>
                Job
            </th>
            <th>
                IdentityNumber
            </th>
            <th>
                PhoneNumber
            </th>
            <th>
                Province
            </th>
            <th>
                District
            </th>
            <th>
                Commune
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model) {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Dob)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Age)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Ethnic)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Job)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IdentityNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PhoneNumber)
                </td>
                <td>
                    @if (item.Province == null)
                    {
                        <text>Process</text>
                    } else
                    {
                        @Html.DisplayFor(modelItem => item.Province)
                    }
                </td>
                <td>
                    @if (item.District == null)
                    {
                        <text>Process</text>
                    } else
                    {
                        @Html.DisplayFor(modelItem => item.District)
                    }
                </td>
                <td>
                    @if (item.Commune == null)
                    {
                        <text>Process</text>
                    } else
                    {
                        @Html.DisplayFor(modelItem => item.Commune)
                    }
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>

            </tr>
        }
    </tbody>
</table>

<div>
    <!-- Export Excel button -->
    <a class="btn btn-primary" asp-controller="Employees" asp-action="ExportEmployeeToExcel">Download Excel</a>
</div>
<br />

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    var startPage = Math.Max(1, Model.PageIndex - 2);
    var endPage = Math.Min(Model.TotalPages, Model.PageIndex + 2);
}

<nav aria-label="Page navigation example">
    <ul class="pagination">
        <li class="page-item @(Model.PageIndex == 1 ? "disabled" : "")">
            <a asp-action="Index" asp-route-pageNumber="1" class="page-link">
                1
            </a>
        </li>
        @if (startPage > 2)
        {
            <li class="page-item disabled">
                <span class="page-link">...</span>
            </li>
        }
        @for (var i = startPage; i <= endPage; i++)
        {
            <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                <a asp-action="Index" asp-route-pageNumber="@i" class="page-link">
                    @i
                </a>
            </li>
        }
        @if (endPage < Model.TotalPages - 1)
        {
            <li class="page-item disabled">
                <span class="page-link">...</span>
            </li>
        }
        @if (Model.PageIndex != Model.TotalPages && Model.TotalPages > 1)
        {
            <li class="page-item @(Model.PageIndex == Model.TotalPages ? "active" : "")">
                <a asp-action="Index" asp-route-pageNumber="@Model.TotalPages" class="page-link">
                    @Model.TotalPages
                </a>
            </li>
        }
    </ul>
</nav>
<br />


